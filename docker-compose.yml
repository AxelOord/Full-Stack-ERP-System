services:
  app:
    image: ${DOCKER_REGISTRY-}app:${IMAGE_TAG:-latest}
    platform: linux/amd64
    build:
      context: ./apps/backend
      dockerfile: src/App/Dockerfile
    ports:
      - "5135:5135"
    depends_on:
      - db
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=5135
      - ASPNETCORE_URLS=http://0.0.0.0:5135
    networks:
      - app-network
    restart: on-failure
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5135/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
  
  # frontend:
  #   image: ${DOCKER_REGISTRY-}frontend:${IMAGE_TAG:-latest}
  #   build:
  #     context: .
  #     dockerfile: apps/frontend/Dockerfile
  #   ports:
  #     - "3000:3000"
  #   environment:
  #     - NODE_ENV=production
  #   depends_on:
  #     - app
  #   networks:
  #     - app-network

  db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    ports:
      - "1433:1433"
    environment:
      - SA_PASSWORD=Password123
      - ACCEPT_EULA=Y
    volumes:
      - db-data:/var/opt/mssql
    networks:
      - app-network

networks:
  app-network:
  
volumes:
  db-data:  